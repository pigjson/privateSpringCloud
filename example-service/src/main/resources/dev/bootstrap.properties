server.port=8687

#服务名,注册到中心的名字
spring.application.name=example-service

#注册中心,多个注册中心用,隔开
eureka.client.service-url.defaultZone=http://10.7.4.62:8887/eureka/

#info
info.name=$project.name$
info.description=$project.description$
info.version=$project.version$

#开启配置服务发现
spring.cloud.config.discovery.enabled=true
#如无法连接到配置服务器，则客户端以异常停止
spring.cloud.config.fail-fast=true
#如无法连接到配置服务器，尝试重连次数
spring.cloud.config.retry.max-attempts=10



#Eureka客户端向服务端发送心跳的时间间隔，单位为秒 默认30秒
eureka.instance.lease-renewal-interval-in-seconds=30
#Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，默认90秒，超过则剔除
eureka.instance.lease-expiration-duration-in-seconds=90
#actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# redis config
#spring.redis.cluster.nodes=10.9.4.206:7000,10.9.4.206:7001,10.9.4.206:7002,10.9.4.207:7000,10.9.4.207:7001,10.9.4.207:7002
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=127.0.0.1
## Redis服务器连接端口
#spring.redis.port=6379
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.pool.max-active=500
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.jedis.pool.max-idle=100
## 连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=10000


spring.redis.timeout=50000
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456
spring.redis.database=0
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=1
spring.redis.lettuce.pool.max-wait=30000
spring.redis.lettuce.pool.max-active=8